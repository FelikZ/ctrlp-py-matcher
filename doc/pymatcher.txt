*pymatcher.txt* 

Version: 1.0c
Author : FelikZ <thefelikz gmailcom>
License: {{{
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS                    *pymatcher-contents*

Introduction        |pymatcher-introduction|
Install             |pymatcher-install|

==============================================================================
INTRODUCTION                    *pymatcher-introduction*

*pymatcher* is a replacement for standard fuzzy matcher provided with CtrlP
because of its performance issues on huge projects. Tested on 350k files.
Some queries causes |CtrlP|'s standard matcher freezes up to 15 seconds. This
matcher provides ~700ms performance on the same hardware with same queries.
Pull requests to improve above performance are much appreciated.

==============================================================================
INSTALL                         *pymatcher-install*

    NeoBundle installation:
>
    NeoBundle 'FelikZ/ctrlp-py-matcher'
<
    To enable |pymatcher| insert the following in your .vimrc:
>
    " PyMatcher for CtrlP
    if !has('python3') && !has('python') 
        echo 'In order to use pymatcher plugin, you need +python or +python3 compiled vim'
    else
        let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
    endif
<
    To improve |CtrlP| experience it is strongly recommended to install |AG|
>
        https://github.com/ggreer/the_silver_searcher
<
    and then use following |CtrlP| settings in your .vimrc:
>
    " Set delay to prevent extra search
    let g:ctrlp_lazy_update = 350

    " Do not clear filenames cache, to improve CtrlP startup
    " You can manualy clear it by <F5>
    let g:ctrlp_clear_cache_on_exit = 0

    " Set no file limit, we are building a big project
    let g:ctrlp_max_files = 0

    " If ag is available use it as filename list generator instead of 'find'
    if executable("ag")
        set grepprg=ag\ --nogroup\ --nocolor
        let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup --ignore ''.git'' --ignore ''.DS_Store'' --ignore ''node_modules'' --hidden -g ""'
    endif
<
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
